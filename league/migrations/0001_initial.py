# -*- coding: utf-8 -*-
# Generated by Django 1.10.5 on 2017-02-21 10:55
from __future__ import unicode_literals

import datetime
from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0008_alter_user_username_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('kgs_username', models.CharField(max_length=20)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Division',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(max_length=20)),
                ('order', models.SmallIntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Game',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='LeagueEvent',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('begin_time', models.DateTimeField(blank=True)),
                ('end_time', models.DateTimeField(blank=True)),
                ('name', models.TextField(max_length=20)),
                ('nb_matchs', models.SmallIntegerField(default=2)),
                ('ppwin', models.DecimalField(decimal_places=1, default=1.5, max_digits=2)),
                ('pploss', models.DecimalField(decimal_places=1, default=0.5, max_digits=2)),
            ],
        ),
        migrations.CreateModel(
            name='LeaguePlayer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('kgs_username', models.CharField(default='', max_length=20)),
                ('nb_win', models.SmallIntegerField(default=0)),
                ('nb_loss', models.SmallIntegerField(default=0)),
                ('score', models.DecimalField(decimal_places=1, default=0, max_digits=2)),
                ('results', models.CharField(blank=True, default='{}', max_length=200)),
                ('p_status', models.SmallIntegerField(default=0)),
                ('division', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.Division')),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.LeagueEvent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Registry',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('time_kgs', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('kgs_delay', models.SmallIntegerField(default=19)),
                ('primary_event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.LeagueEvent')),
            ],
        ),
        migrations.CreateModel(
            name='Sgf',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sgf_text', models.TextField(default='sgf')),
                ('urlto', models.URLField(default='http://')),
                ('wplayer', models.CharField(default='?', max_length=200)),
                ('bplayer', models.CharField(default='?', max_length=200)),
                ('place', models.CharField(default='?', max_length=200)),
                ('result', models.CharField(default='?', max_length=200)),
                ('league_valid', models.BooleanField(default=False)),
                ('date', models.DateTimeField(blank=True, default=datetime.datetime.now)),
                ('board_size', models.SmallIntegerField(default=19)),
                ('handicap', models.SmallIntegerField(default=0)),
                ('komi', models.DecimalField(decimal_places=2, default=6.5, max_digits=5)),
                ('byo', models.CharField(default='sgf', max_length=20)),
                ('time', models.SmallIntegerField(default=19)),
                ('game_type', models.CharField(default='Free', max_length=20)),
                ('message', models.CharField(blank=True, default='nothing', max_length=100)),
                ('p_status', models.SmallIntegerField(default=1)),
            ],
        ),
        migrations.AddField(
            model_name='game',
            name='black',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='black', to='league.LeaguePlayer'),
        ),
        migrations.AddField(
            model_name='game',
            name='event',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='league.LeagueEvent'),
        ),
        migrations.AddField(
            model_name='game',
            name='sgf',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='league.Sgf'),
        ),
        migrations.AddField(
            model_name='game',
            name='white',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='white', to='league.LeaguePlayer'),
        ),
        migrations.AddField(
            model_name='game',
            name='winner',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='winner', to='league.LeaguePlayer'),
        ),
        migrations.AddField(
            model_name='division',
            name='league_event',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='league.LeagueEvent'),
        ),
    ]
